// ---------------------------------------------------------------- //
// This file is autogenerated by pioasm version 2.2.0; do not edit! //
// ---------------------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ------ //
// ws2812 //
// ------ //

#define ws2812_wrap_target 0
#define ws2812_wrap 3
#define ws2812_pio_version 1

#define ws2812_T1 2
#define ws2812_T2 5
#define ws2812_T3 3

#define ws2812_offset_idle 4u
#define ws2812_offset_out0 5u
#define ws2812_offset_out1 6u

static const uint16_t ws2812_program_instructions[] = {
            //     .wrap_target
    0x7221, //  0: out    x, 1            side 0 [2]
    0x1923, //  1: jmp    !x, 3           side 1 [1]
    0x1c00, //  2: jmp    0               side 1 [4]
    0xb442, //  3: nop                    side 0 [4]
            //     .wrap
    0xb842, //  4: nop                    side 1
    0xb042, //  5: nop                    side 0
    0xb842, //  6: nop                    side 1
};

#if !PICO_NO_HARDWARE
static const struct pio_program ws2812_program = {
    .instructions = ws2812_program_instructions,
    .length = 7,
    .origin = -1,
    .pio_version = ws2812_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config ws2812_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + ws2812_wrap_target, offset + ws2812_wrap);
    sm_config_set_sideset(&c, 2, true, false);
    return c;
}
#endif

